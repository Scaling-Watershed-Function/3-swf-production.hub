shrb_t,
urbn_t,
wtnd_t)
lnd_m0 <- lnd_m0 %>% group_by(comid) %>%
mutate(p_ant = agrc + urbn) %>%
mutate(p_frt = frst + wtnd) %>%
mutate(p_shb = shrb) %>%
mutate(p_ant_t = agrc_t + urbn_t) %>%
mutate(p_frt_t = frst_t + wtnd_t) %>%
mutate(p_shb_t = shrb_t)
lnd_m <- lnd_m0 %>% rowwise() %>%
mutate(hl = entropy(c(p_ant,
p_frt,
p_shb),unit = "log")) %>%
mutate(hrl = hl/log(3)) %>%
mutate(ht = entropy(c(p_ant_t,
p_frt_t,
p_shb_t),unit = "log")) %>%
mutate(hrt = ht/log(3))
bgc_lnd0 <- merge(lnd_m, dat_o, by = "comid") # There are duplicates comid's in both
#datasets, to filter those out:
bgc_lnd <- bgc_lnd0
###############################################################################
# Scaling Analysis for Respiration Rates across the Yakima River Basin
# FIGURES
###############################################################################
#By : Francisco Guerrero
#Data source: SWAT-NEXXS Model simulations (By Kyongho Son)
# SETTINGS
# Loading packages:
# Run for the first time only
# install.packages(librarian)
# To run this code in macos it is necessary to install XQuartz from
#www.xquartz.org
# Also, you may need to install the GIT credential manager following the instructions
# from: https://github.com/GitCredentialManager/git-credential-manager/blob/main/README.md
rm()
librarian::shelf(tidyverse,# for plotting
plot3D,# for 3D plots
plot3Drgl,# for interactive 3D plots
rgl,# required by plot3Drgl
entropy,#Information theory calculations
GGally,#pair plots
scales,# manipulating log scales
stringr,# editing text
Hmisc,# Harrell's miscellaneaous for stats
gtable)# To manipulate ggplot objects
theme_httn<-  theme(axis.text=element_text(colour="black",size=22),
axis.title = element_text(size = 32, face = "bold"),
panel.grid.minor= element_line(colour = "gray", linetype = "dotted"),
panel.grid.major = element_line(colour = "gray", linetype = "dashed"),
panel.border = element_rect(fill=NA, colour = "black", linewidth = 1.5),
panel.background=element_rect(fill="white"),
axis.ticks.length = unit(0.254, "cm"),
axis.ticks = element_line(colour = "black", linewidth = 1),
axis.line = element_line(colour = "black"),
legend.position = c(0.85,0.25),
legend.direction = "vertical",
legend.background = element_blank(),
legend.key.size = unit(1.0, 'lines'),#Changing spacing between legend keys
legend.title = element_text())
set.seed(2703)
#Data:
#values
bgc_cln0 <- read.csv("assets/data/230123_scaling_lnd_bgc.csv",
stringsAsFactors=TRUE)
bgc_cln0 <- bgc_cln0[,2:ncol(bgc_cln0)]
summary(bgc_cln0)
# Random forests filled data
rff_bgc <- filter(bgc_cln0,hz_exchng == "NA")
# Random forests filled data
rff_bgc <- filter(bgc_cln0,is.na(hz_exchng)=TRUE)
# Random forests filled data
rff_bgc <- filter(bgc_cln0,is.na(hz_exchng)==TRUE)
###############################################################################
# Scaling Analysis for Respiration Rates across the Yakima River Basin
# FIGURES
###############################################################################
#By : Francisco Guerrero
#Data source: SWAT-NEXXS Model simulations (By Kyongho Son)
# SETTINGS
# Loading packages:
# Run for the first time only
# install.packages(librarian)
# To run this code in macos it is necessary to install XQuartz from
#www.xquartz.org
# Also, you may need to install the GIT credential manager following the instructions
# from: https://github.com/GitCredentialManager/git-credential-manager/blob/main/README.md
rm()
librarian::shelf(tidyverse,# for plotting
plot3D,# for 3D plots
plot3Drgl,# for interactive 3D plots
rgl,# required by plot3Drgl
entropy,#Information theory calculations
GGally,#pair plots
scales,# manipulating log scales
stringr,# editing text
Hmisc,# Harrell's miscellaneaous for stats
gtable)# To manipulate ggplot objects
theme_httn<-  theme(axis.text=element_text(colour="black",size=22),
axis.title = element_text(size = 32, face = "bold"),
panel.grid.minor= element_line(colour = "gray", linetype = "dotted"),
panel.grid.major = element_line(colour = "gray", linetype = "dashed"),
panel.border = element_rect(fill=NA, colour = "black", linewidth = 1.5),
panel.background=element_rect(fill="white"),
axis.ticks.length = unit(0.254, "cm"),
axis.ticks = element_line(colour = "black", linewidth = 1),
axis.line = element_line(colour = "black"),
legend.position = c(0.85,0.25),
legend.direction = "vertical",
legend.background = element_blank(),
legend.key.size = unit(1.0, 'lines'),#Changing spacing between legend keys
legend.title = element_text())
set.seed(2703)
#Data:
#header info
# pending!!!!!
#values
bgc_cln0 <- read.csv("assets/data/230123_scaling_lnd_bgc.csv",
stringsAsFactors=TRUE)
bgc_cln0 <- bgc_cln0[,2:ncol(bgc_cln0)]
summary(bgc_cln0)
# Random forests filled data
rff_bgc <- filter(bgc_cln0,is.na(hz_exchng)==TRUE)
#River Corridor model generated data
rcm_bgc <- na.exclude(bgc_cln0) # a drop of 1035 additional data points.
bgc_cln <- bgc_cln0 %>%
mutate(model = ifelse(is.na(hz_exchng)==TRUE,"rff","rcm"))
glimpse(bgc_cln)
p <- ggplot(bgc_cln,aes(wsd_are,crsp_wsa, color = model))+
geom_point(alpha = 0.5)+
scale_x_log10()+
scale_y_log10()+
geom_abline(intercept = -3, slope = 1)+
facet_wrap(~model)
p
p <- ggplot(bgc_cln,aes(wsd_are,crsp_wsa, color = model))+
# geom_point(alpha = 0.5)+
geom_boxplot(alpha = 0.5)+
scale_x_log10()+
scale_y_log10()+
geom_abline(intercept = -3, slope = 1)+
facet_wrap(~model)
p
summary(filter(bgc_cln,model=="rff"))
# We have zero values for cumulative watershed respiration. Let's check how many of them we have:
length(filter(bgc_cln,crsp_wsa==0))
p <- ggplot(filter(bgc_cln,crsp_wsa>0),aes(wsd_are,crsp_wsa, color = model))+
geom_point(alpha = 0.5)+
scale_x_log10()+
scale_y_log10()+
geom_abline(intercept = -3, slope = 1)+
facet_wrap(~model)
p
load(file = "nhd_WM_streamdatabase_annual_resp_mass_01162")
dat <- load("nhd_WM_streamdatabase_annual_resp_mass_01162023.rda")
getwd()
dat <- load("assets/data/nhd_WM_streamdatabase_annual_resp_mass_01162023.rda")
dat <- load("assets\data\nhd_WM_streamdatabase_annual_resp_mass_01162023.rda")
dat <- load(file = "assets/data/nhd_WM_streamdatabase_annual_resp_mass_01162023.rda")
load("~/GitHub/scaling_watershed_function/swf-production.hub/assets/data/nhd_WM_streamdatabase_annual_resp_mass_01162023.rda")
load("Y:/RC2/RC1_model_outputs/WM/nhd_WM_streamdatabase_annual_resp_mass_01162023.rda")
sdb_dat0 <- read.csv("assets/data/nhd_WM_streamdatabase_annual_resp_mass_01162023.csv")
glimpse(sdb_dat0)
librarian::shelf(tidyr)
set.seed(2703)
#Data:
sdb_dat0 <- read.csv("assets/data/nhd_WM_streamdatabase_annual_resp_mass_01162023.csv")
glimpse(sbd_dat)
librarian::shelf(tidyr)
set.seed(2703)
#Data:
#header info
# PENDING!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#values
lgc_o <- read.csv("assets/data/220725_yrb_resp_vars_legacy.csv",stringsAsFactors = TRUE)
spt_o <- read.csv("assets/data/230110_yrb_spatial_camp.csv", stringsAsFactors = TRUE)
rsp_o <- read.csv("assets/data/230116_yrb_respt_vars.csv", stringsAsFactors = TRUE)
hbc_o <- read.csv("assets/data/230117_yrb_hbgc_vars.csv", stringsAsFactors = TRUE)
lnd_o <- read.csv("assets/data/230117_yrb_cmid_land_2011.csv",stringsAsFactors=TRUE)
lgc_m <- dplyr::select(lgc_o,COMID,
totco2g_m2_day_fill,
cum_totco2g_m2_day) %>%
rename(comid = COMID,
rsp_loc = totco2g_m2_day_fill,
rsp_acm_lg = cum_totco2g_m2_day)
librarian::shelf(tidyverse)
set.seed(2703)
lgc_m <- dplyr::select(lgc_o,COMID,
totco2g_m2_day_fill,
cum_totco2g_m2_day) %>%
rename(comid = COMID,
rsp_loc = totco2g_m2_day_fill,
rsp_acm_lg = cum_totco2g_m2_day)
glimpse(lgc_m)
glimpse(sdb_dat0)
###############################################################################
# Scaling Analysis for Respiration Rates across the Yakima River Basin
# DATA PREPARATION
###############################################################################
#By : Francisco Guerrero
#Data source: SWAT-NEXXS Model simulations (By Kyongho Son)
#Loading packages:
#Run for the first time only
#install.packages(librarian)
# To run this code in macos it is necessary to install XQuartz from
#www.xquartz.org
librarian::shelf(tidyverse)
set.seed(2703)
#Data:
# Data
sdb_dat0 <- read.csv("assets/data/nhd_WM_streamdatabase_annual_resp_mass_01162023.csv")
w_lnd <- sbd_dat0 %>% select(COMID,
urban,
forest,
wetland,
agrc,
shrub,
turban,
tforest,
twetland,
tagrc,
tshrub)
w_lnd <- sdb_dat0 %>% select(COMID,
urban,
forest,
wetland,
agrc,
shrub,
turban,
tforest,
twetland,
tagrc,
tshrub)
w_lnd <- rename(lnd,
comid = COMID,
urbn = urban,
frst = forest,
wtnd = wetland,
shrb = shrub,
urbn_t = turban,
frst_t = tforest,
wtnd_t = twetland,
agrc_t = tagrc,
shrb_t = tshrub)
w_lnd <- rename(w_lnd,
comid = COMID,
urbn = urban,
frst = forest,
wtnd = wetland,
shrb = shrub,
urbn_t = turban,
frst_t = tforest,
wtnd_t = twetland,
agrc_t = tagrc,
shrb_t = tshrub)
# Saving as csv file
write.csv(w_land,"assets/data/230126_wlm_lndu_dat.csv")
# Saving as csv file
write.csv(w_lnd,"assets/data/230126_wlm_lndu_dat.csv")
inp_dat <- read.csv("assets/data/model_resp_annual_wm_input_output_df_01_16_2023.csv")
w_rsp_dat <- read.csv("assets/data/cum_resp_WM_mass_data_0116_2023.csv")
wlm_dat0 <- merge(inp_dat,w_rsp_dat,by="COMID")
wlm_dat0 <- merge(w_rsp_dat,inp_dat,by="COMID")
wlm_dat0 <- merge(w_rsp_dat,inp_dat,by="COMID")
wlm_dat0 <- unique(merge(w_rsp_dat,inp_dat,by="COMID"))
glimpse(wlm_dat0)
bgc_cln0 <- read.csv("assets/data/230123_scaling_lnd_bgc.csv",
stringsAsFactors=TRUE)
glimpse(bgc_cln0)
glimpse(wlm_dat0)
glimpse(w_lnd)
librarian::shelf(tidyverse)
set.seed(2703)
# Data:
#values
lgc_o <- read.csv("assets/data/raw/220725_yrb_resp_vars_legacy.csv",stringsAsFactors = TRUE)
spt_o <- read.csv("assets/data/raw/230110_yrb_spatial_camp.csv", stringsAsFactors = TRUE)
rsp_o <- read.csv("assets/data/raw/230116_yrb_respt_vars.csv", stringsAsFactors = TRUE)
hbc_o <- read.csv("assets/data/raw/230117_yrb_hbgc_vars.csv", stringsAsFactors = TRUE)
yrb_lgc_o <- read.csv("assets/data/raw/220725_yrb_resp_vars_legacy.csv",
stringsAsFactors = TRUE)
yrb_spt_o <- read.csv("assets/data/raw/230110_yrb_spatial_camp.csv",
stringsAsFactors = TRUE)
yrb_rsp_o <- read.csv("assets/data/raw/230116_yrb_respt_vars.csv",
stringsAsFactors = TRUE)
yrb_hbc_o <- read.csv("assets/data/raw/230117_yrb_hbgc_vars.csv",
stringsAsFactors = TRUE)
#Willamette River Basin
wlm_rsp_o <- read.csv("assets/data/raw/cum_resp_WM_mass_data_0116_2023.csv",
stringsAsFactors = TRUE)
wlm_hbc_o <- read.csv("assets/data/raw/nhd_WM_streamdatabase_annual_resp_mass_01162023.csv",
stringsAsFactors = TRUE)
var_names <- colnames(yrb_rsp_o)
var_names
glimpse(wlm_rsp_o)
glimpse(wlm_hbc_o)
wlm_hbc_i <- read.csv("assets/data/raw/model_resp_annual_wm_input_output_df_01_16_2023",
stringsAsFactors = TRUE)
wlm_hbc_i <- read.csv("assets/data/raw/model_resp_annual_wm_input_output_df_01_16_2023.csv",
stringsAsFactors = TRUE)
glimpse(wlm_hbc_i)
wlm_rsp_i <- read.csv("assets/data/raw/model_resp_wm_rf0116.csv", stringsAsFactors = TRUE)
glimpse(wlm_hbc_o)
glimpse(wlm_hbc_i)
glimpse(wlm_rsp_o)
glimpse(wlm_rsp_i)
p <- ggplot(wlm_hbc_i,aes(TotDASqKM,logDA_km2))+
geom_point()
p
###############################################################################
# Scaling Analysis for Respiration Rates across the Yakima and Willamette River
# Basins
# DATA PREPARATION
###############################################################################
#By : Francisco Guerrero
#Data source: SWAT-NEXXS Model simulations (By Kyongho Son)
#Loading packages:
# Run for the first time only
#install.packages(librarian)
#To run this code in macOS it is necessary to install XQuartz from
#www.xquartz.org
librarian::shelf(tidyverse)
set.seed(2703)
# Data:
#values
#Yakima River Basin
yrb_lgc_o <- read.csv("assets/data/raw/220725_yrb_resp_vars_legacy.csv",
stringsAsFactors = TRUE)
yrb_spt_o <- read.csv("assets/data/raw/230110_yrb_spatial_camp.csv",
stringsAsFactors = TRUE)
yrb_rsp_o <- read.csv("assets/data/raw/230116_yrb_respt_vars.csv",
stringsAsFactors = TRUE)
yrb_hbc_o <- read.csv("assets/data/raw/230117_yrb_hbgc_vars.csv",
stringsAsFactors = TRUE)
#Willamette River Basin
wlm_rsp_o <- read.csv("assets/data/raw/cum_resp_WM_mass_data_0116_2023.csv",
stringsAsFactors = TRUE)
wlm_rsp_i <- read.csv("assets/data/raw/model_resp_wm_rf0116.csv", stringsAsFactors = TRUE)
wlm_hbc_o <- read.csv("assets/data/raw/nhd_WM_streamdatabase_annual_resp_mass_01162023.csv",
stringsAsFactors = TRUE)
wlm_hbc_i <- read.csv("assets/data/raw/model_resp_annual_wm_input_output_df_01_16_2023.csv",
stringsAsFactors = TRUE)
# Re-ordering Willamette River Basin Data
p <- ggplot(wlm_hbc_i,aes(TotDASqKM,logDA_km2))+
geom_point()
p
wlm_hbc_i$logDA_km2 = log(wlm_hbc_i$TotDASqKM,10)
p <- ggplot(wlm_hbc_i,aes(TotDASqKM,logDA_km2))+
geom_point()
p
glimpse(wlm_hbc_i)
wlm_hbc_im <- dplyr::select(wlm_hbc_i,COMID,CAT_STREAM_SLOPE,TOT_STREAM_SLOPE,TOT_BASIN,AREA)
glimpse_wlm_hbc_i
gliimpse(wlm_hbc_i)
glimpse(wlm_hbc_o)
wlm_hbc_om <- dplyr::select(wlm_hbc_o,COMID,CAT_STREAM_SLOPE,TOT_STREAM_SLOPE,TOT_BASIN,AREA)
wlm_hbc_om <- dplyr::select(wlm_hbc_o,COMID,CAT_STREAM_SLOPE,TOT_STREAM_SLOPE,TOT_BASIN_AREA)
glimpse(wlm_hbc_i)
wlm_hbc_im <- dplyr::select(wlm_hbc_i,COMID,TotDASqKM,length_m)
glimpse(wlm_rsp_o)
wlm_rsp_om <- dplyr::select(wlm_rsp_o,COMID,FromNode,ToNode,cum_totco2g_day,cum_stream_area_m2,
cum_stream_length_m, cum_totco2g_day_Tdrain_m2, cum_totco2g_day_Tsurface_m2)
glimpse(wlm_rsp_i)
wlm_rsp_im <- dplyr::select(wlm_rsp_i,COMID,totco2g_day_fill,pred_stream_area_m2_fill,stream_length_m)
wlm_rsp_mg <- unique(merge(wlm_hbc_om,wlm_hbc_im,wlm_rsp_om,wlm_rsp_im, by = "COMID"))
wlm_rsp_mg <- unique(merge(wlm_hbc_om,wlm_hbc_im,wlm_rsp_om,wlm_rsp_im, by = COMID))
wlm_rsp_mg <- unique(merge(wlm_hbc_om,wlm_hbc_im,wlm_rsp_om,wlm_rsp_im, by = "COMID"))
glimpse(wlm_hbc_im)
glimpse(wlm_hbc_om)
glimpse(wlm_rsp_om)
glimpse(wlm_rsp_im)
merge(wlm_hbc_om,wlm_hbc_im,wlm_rsp_om,wlm_rsp_im,by = "COMID")
wlm_hbc_mg <- unique(merge(wlm_hbc_om,wlm_hbc_im,by = "COMID"))
wlm_rsp_mg <- unique(merge(wlm_rsp_om,wlm_rsp_im,by = "COMID"))
wlm_rsp_mg0 <- unique(merge(wlm_hbc_mg,wlm_rsp_mg,by="COMID"))
glimpse(wlm_rsp_mg0)
#We will now reorganize columns to bind the YRM and WLM datasets
yrb_rsp_m1 <- dplyr::select(yrb_rsp_o,
COMID,
FromNode,
ToNode,
CAT_BASIN_AREA,
TOT_BASIN_AREA,
stream_length_m,
pred_logw_m,
pred_stream_area_m2_fill,
cum_stream_length_m,
cum_stream_area_m2,
cum_totco2g_day,
cum_totco2g_day_Tsurface_m2,
cum_totco2g_day_Tdrain_m2)
glimpse(wlm_rsp_mg0)
glimpse(wlm_rsp_o)
glimpse(wlm_rsp_i)
glimpse(wlm_hbc_o)
glimpse(wlm_hbc_i)
wlm_rsp_m1 <- dplyr::select(wlm_rsp_m0,
COMID,
FromNode,
ToNode,
TOT_BASIN_AREA,
stream_length_m,
pred_logw_m,
pred_stream_area_m2_fill,
cum_stream_length_m,
cum_stream_area_m2,
cum_totco2g_day,
cum_totco2g_day_Tsurface_m2,
cum_totco2g_day_Tdrain_m2)
wlm_rsp_m1 <- dplyr::select(wlm_rsp_mg0,
COMID,
FromNode,
ToNode,
TOT_BASIN_AREA,
stream_length_m,
pred_logw_m,
pred_stream_area_m2_fill,
cum_stream_length_m,
cum_stream_area_m2,
cum_totco2g_day,
cum_totco2g_day_Tsurface_m2,
cum_totco2g_day_Tdrain_m2)
glimpse(wlm_rsp_mg0)
wlm_rsp_mg0$pred_logw_m <- log((pred_stream_area_m2_fill/stream_length_m),10)
wlm_rsp_mg0$pred_logw_m <- log((wlm_rsp_mg0$pred_stream_area_m2_fill/wlm_rsp_mg0$stream_length_m),10)
summary(wlm_rsp_mg0)
wlm_rsp_m1 <- dplyr::select(wlm_rsp_mg0,
COMID,
FromNode,
ToNode,
TOT_BASIN_AREA,
stream_length_m,
pred_logw_m,
pred_stream_area_m2_fill,
cum_stream_length_m,
cum_stream_area_m2,
cum_totco2g_day,
cum_totco2g_day_Tsurface_m2,
cum_totco2g_day_Tdrain_m2)
yrb_rsp_m1$basin <- "Yakima"
wlm_rsp_m1$basin <- "Willamette"
scl_rsp <- rbind(yrb_rsp_m1,wlm_rsp_m1)
ncol(wlm_rsp_m1)
ncol(yrb_rsp_m1)
glimpse(wlm_rsp_m1)
glimpse(yrb_rsp_m1)
#We will now reorganize columns to bind the YRM and WLM datasets
yrb_rsp_m1 <- dplyr::select(yrb_rsp_o,
COMID,
FromNode,
ToNode,
TOT_BASIN_AREA,
stream_length_m,
pred_logw_m,
pred_stream_area_m2_fill,
cum_stream_length_m,
cum_stream_area_m2,
cum_totco2g_day,
cum_totco2g_day_Tsurface_m2,
cum_totco2g_day_Tdrain_m2)
glimpse(yrb_rsp_m1)
#We will now reorganize columns to bind the YRM and WLM datasets
yrb_rsp_m1 <- dplyr::select(yrb_rsp_o,
COMID,
FromNode,
ToNode,
TOT_BASIN_AREA,
stream_length_m,
pred_logw_m,
pred_stream_area_m2_fill,
cum_stream_length_m,
cum_stream_area_m2,
cum_totco2g_day,
cum_totco2g_day_Tsurface_m2,
cum_totco2g_day_Tdrain_m2)
glimpse(yrb_rsp_m1)
wlm_rsp_m1 <- dplyr::select(wlm_rsp_mg0,
COMID,
FromNode,
ToNode,
TOT_BASIN_AREA,
stream_length_m,
pred_logw_m,
pred_stream_area_m2_fill,
cum_stream_length_m,
cum_stream_area_m2,
cum_totco2g_day,
cum_totco2g_day_Tsurface_m2,
cum_totco2g_day_Tdrain_m2)
glimpse(wlm_rsp_m1)
yrb_rsp_m1$basin <- "Yakima"
wlm_rsp_m1$basin <- "Willamette"
scl_rsp <- rbind(yrb_rsp_m1,wlm_rsp_m1)
p <- ggplot(scl_rsp,aes(TOT_BASIN_AREA,cum_totco2g_day_Tdrain_m2,color = basin))+
geom_point(alpha = 0.35)+
facet_wrap(~basin, ncol = 2)
p
p <- ggplot(scl_rsp,aes(TOT_BASIN_AREA,cum_totco2g_day_Tdrain_m2,color = basin))+
geom_point(alpha = 0.35)+
scale_x_log10()+
scale_y_log10()+
facet_wrap(~basin, ncol = 2)
p
p <- ggplot(na.omit(scl_rsp),aes(TOT_BASIN_AREA,cum_totco2g_day_Tdrain_m2,color = basin))+
geom_point(alpha = 0.35)+
scale_x_log10()+
scale_y_log10()+
facet_wrap(~basin, ncol = 2)
p
na.rm(scl_rsp)
na.omit(scl_rsp)
