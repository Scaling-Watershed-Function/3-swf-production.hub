p_frt_t,
p_ant_t,
p_shb_t,
hz_exchng,
res_time,
ent_cat,
hze_cat,
rst_cat,
hrt) %>%
gather(c(3:5),key="use",value = "fraction") %>%
mutate(use = fct_relevel(use,c("p_shb_t","p_frt_t","p_ant_t"))) %>%
arrange(use) %>%
ggplot(aes(wshd_area,acm_wshd,color=use))+
facet_wrap(~rst_cat, nrow = 2, labeller = labeller(hze_cat = new.labs))+
geom_abline(slope=1.0, color = "red", linetype = "solid", size = 0.75)+
geom_smooth(aes(wshd_area,acm_wshd),method = "lm", inherit.aes = FALSE,
fullrange = TRUE, color = "black", size = 0.65, se = TRUE, fill = "gray",
alpha = 0.7)+
geom_point(aes(alpha = fraction),size = 2.5)+
scale_x_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*m^-2*d^-1,")"))))+
scale_color_manual(values = c("#7b3294","#008837","#dfc27d"))+
annotation_logticks(size = 0.75, sides = "tblr")+
theme_httn+
theme(legend.position = "none",
legend.text = element_text(size=12),
legend.title = element_text(size=16),
plot.title = element_text(size = 16),
strip.text = element_text(size = 16, face = "bold"))
bgc_cln %>% select(wshd_area,
acm_wshd,
p_frt_t,
p_ant_t,
p_shb_t,
hz_exchng,
res_time,
ent_cat,
hze_cat,
rst_cat,
hrt) %>%
gather(c(3:5),key="use",value = "fraction") %>%
mutate(use = fct_relevel(use,c("p_shb_t","p_frt_t","p_ant_t"))) %>%
arrange(use) %>%
ggplot(aes(wshd_area,acm_wshd,color=use))+
facet_wrap(~rst_cat, nrow = 2, labeller = labeller(hze_cat = new.labs))+
geom_abline(slope=1.0, color = "red", linetype = "solid", size = 0.75)+
geom_smooth(aes(wshd_area,acm_wshd),method = "lm", inherit.aes = FALSE,
fullrange = TRUE, color = "black", size = 0.65, se = TRUE, fill = "gray",
alpha = 0.7)+
geom_point(aes(alpha = fraction),size = 2.5)+
scale_x_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*km^-2*d^-1,")"))))+
scale_color_manual(values = c("#7b3294","#008837","#dfc27d"))+
annotation_logticks(size = 0.75, sides = "tblr")+
theme_httn+
theme(legend.position = "none",
legend.text = element_text(size=12),
legend.title = element_text(size=16),
plot.title = element_text(size = 16),
strip.text = element_text(size = 16, face = "bold"))
bgc_cln %>% select(wshd_area,
acm_wshd,
p_frt_t,
p_ant_t,
p_shb_t,
hz_exchng,
res_time,
ent_cat,
hze_cat,
rst_cat,
d50_cat,
hrt) %>%
gather(c(3:5),key="use",value = "fraction") %>%
mutate(use = fct_relevel(use,c("p_shb_t","p_frt_t","p_ant_t"))) %>%
arrange(use) %>%
ggplot(aes(wshd_area,acm_wshd,color=use))+
facet_wrap(~d50_cat, nrow = 2, labeller = labeller(hze_cat = new.labs))+
geom_abline(slope=1.0, color = "red", linetype = "solid", size = 0.75)+
geom_smooth(aes(wshd_area,acm_wshd),method = "lm", inherit.aes = FALSE,
fullrange = TRUE, color = "black", size = 0.65, se = TRUE, fill = "gray",
alpha = 0.7)+
geom_point(aes(alpha = fraction),size = 2.5)+
scale_x_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*km^-2*d^-1,")"))))+
scale_color_manual(values = c("#7b3294","#008837","#dfc27d"))+
annotation_logticks(size = 0.75, sides = "tblr")+
theme_httn+
theme(legend.position = "none",
legend.text = element_text(size=12),
legend.title = element_text(size=16),
plot.title = element_text(size = 16),
strip.text = element_text(size = 16, face = "bold"))
bgc_cln %>% select(wshd_area,
acm_wshd,
p_frt_t,
p_ant_t,
p_shb_t,
hz_exchng,
res_time,
ent_cat,
hze_cat,
rst_cat,
d50_cat,
hrt) %>%
gather(c(3:5),key="use",value = "fraction") %>%
mutate(use = fct_relevel(use,c("p_shb_t","p_frt_t","p_ant_t"))) %>%
arrange(use) %>%
ggplot(aes(wshd_area,acm_wshd,color=use))+
facet_wrap(~ent_cat, nrow = 2, labeller = labeller(hze_cat = new.labs))+
geom_abline(slope=1.0, color = "red", linetype = "solid", size = 0.75)+
geom_smooth(aes(wshd_area,acm_wshd),method = "lm", inherit.aes = FALSE,
fullrange = TRUE, color = "black", size = 0.65, se = TRUE, fill = "gray",
alpha = 0.7)+
geom_point(aes(alpha = fraction),size = 2.5)+
scale_x_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*km^-2*d^-1,")"))))+
scale_color_manual(values = c("#7b3294","#008837","#dfc27d"))+
annotation_logticks(size = 0.75, sides = "tblr")+
theme_httn+
theme(legend.position = "none",
legend.text = element_text(size=12),
legend.title = element_text(size=16),
plot.title = element_text(size = 16),
strip.text = element_text(size = 16, face = "bold"))
bgc_cln %>% select(wshd_area,
acm_wshd,
p_frt_t,
p_ant_t,
p_shb_t,
hz_exchng,
res_time,
ent_cat,
hze_cat,
rst_cat,
d50_cat,
hrt) %>%
gather(c(3:5),key="use",value = "fraction") %>%
mutate(use = fct_relevel(use,c("p_shb_t","p_frt_t","p_ant_t"))) %>%
arrange(use) %>%
ggplot(aes(wshd_area,acm_wshd,color=use))+
facet_wrap(~hze_cat, nrow = 2, labeller = labeller(hze_cat = new.labs))+
geom_abline(slope=1.0, color = "red", linetype = "solid", size = 0.75)+
geom_smooth(aes(wshd_area,acm_wshd),method = "lm", inherit.aes = FALSE,
fullrange = TRUE, color = "black", size = 0.65, se = TRUE, fill = "gray",
alpha = 0.7)+
geom_point(aes(alpha = fraction),size = 2.5)+
scale_x_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*km^-2*d^-1,")"))))+
scale_color_manual(values = c("#7b3294","#008837","#dfc27d"))+
annotation_logticks(size = 0.75, sides = "tblr")+
theme_httn+
theme(legend.position = "none",
legend.text = element_text(size=12),
legend.title = element_text(size=16),
plot.title = element_text(size = 16),
strip.text = element_text(size = 16, face = "bold"))
bgc_cln %>% select(wshd_area,
acm_wshd,
p_frt_t,
p_ant_t,
p_shb_t,
hz_exchng,
res_time,
ent_cat,
hze_cat,
rst_cat,
d50_cat,
hrt) %>%
gather(c(3:5),key="use",value = "fraction") %>%
mutate(use = fct_relevel(use,c("p_shb_t","p_frt_t","p_ant_t"))) %>%
arrange(use) %>%
ggplot(aes(wshd_area,acm_wshd,color=use))+
facet_wrap(~rst_cat, nrow = 2, labeller = labeller(hze_cat = new.labs))+
geom_abline(slope=1.0, color = "red", linetype = "solid", size = 0.75)+
geom_smooth(aes(wshd_area,acm_wshd),method = "lm", inherit.aes = FALSE,
fullrange = TRUE, color = "black", size = 0.65, se = TRUE, fill = "gray",
alpha = 0.7)+
geom_point(aes(alpha = fraction),size = 2.5)+
scale_x_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*km^-2*d^-1,")"))))+
scale_color_manual(values = c("#7b3294","#008837","#dfc27d"))+
annotation_logticks(size = 0.75, sides = "tblr")+
theme_httn+
theme(legend.position = "none",
legend.text = element_text(size=12),
legend.title = element_text(size=16),
plot.title = element_text(size = 16),
strip.text = element_text(size = 16, face = "bold"))
rm()
librarian::shelf(ggplot2,# for plotting
dplyr,# for data wrangling
plot3D,# for 3D plots
plot3Drgl,# for interactive 3D plots
rgl,# required by plot3Drgl
tidyverse,#data wrangling and tidying
entropy,#Information theory calculations
GGally,#pair plots
scales,# manipulating log scales
stringr,# editing text
Hmisc,# Harrell's miscellaneaous for stats
gtable)# To manipulate ggplot objects
install.packages("librarian")
rm()
librarian::shelf(ggplot2,# for plotting
dplyr,# for data wrangling
plot3D,# for 3D plots
plot3Drgl,# for interactive 3D plots
rgl,# required by plot3Drgl
tidyverse,#data wrangling and tidying
entropy,#Information theory calculations
GGally,#pair plots
scales,# manipulating log scales
stringr,# editing text
Hmisc,# Harrell's miscellaneaous for stats
gtable)# To manipulate ggplot objects
theme_httn<-  theme(axis.text=element_text(colour="black",size=22),
axis.title = element_text(size = 32, face = "bold"),
panel.grid.minor= element_line(colour = "gray", linetype = "dotted"),
panel.grid.major = element_line(colour = "gray", linetype = "dashed"),
panel.border = element_rect(fill=NA, colour = "black", size=1.5),
panel.background=element_rect(fill="white"),
axis.ticks.length = unit(0.254, "cm"),
axis.ticks = element_line(colour = "black", size=1),
axis.line = element_line(colour = "black"),
legend.position = c(0.85,0.25),
legend.direction = "vertical",
legend.background = element_blank(),
legend.key.size = unit(1.0, 'lines'),#Changing spacing between legend keys
legend.title = element_text())
set.seed(2703)
#values
bgc_cln0 <- read.csv("230109_scaling_lnd_bgc.csv",
stringsAsFactors=TRUE)
bgc_cln <- as_tibble(na.exclude(bgc_cln0))# Removing all NA's corresponding
bgc_cln <- bgc_cln %>%
mutate(hrt = if_else(ht==0,0,hrt))
summary(bgc_cln)
bgc_cln <- bgc_cln %>%
mutate(hrt = if_else(ht==0,0,hrt))
summary(bgc_cln)
bgc_cln <- bgc_cln %>%
mutate(hrt = if_else(ht==0,0,hrt))
summary(bgc_cln)
bgc_cln <- bgc_cln %>%
mutate(hrt = if_else(ht==0,0,hrt))
summary(bgc_cln)
my_fn <- function(data, mapping, pts=list(), smt=list(), ...){
ggplot(data = data, mapping = mapping, ...) +
do.call(geom_point, pts) +
do.call(geom_smooth, smt)
}
paired_plot <- select(bgc_cln,
acm_resp,
wshd_area,
d50m,
order,
logw_m,
length_m,
res_time,
hz_exchng) %>%
mutate(log_resp = log10(acm_resp)) %>%
mutate(log_w_area = log10(wshd_area)) %>%
mutate(log_d50m = log10(d50m)) %>%
select(c(4:11)) %>%
ggpairs(lower = list(continuous =
wrap(my_fn,
pts=list(size=0.1, colour="gray"),
smt=list(method="loess", se=F, size=1, colour="blue",span=0.8))))
# paired_plot
paired_plot
paired_plot_b <- select(bgc_cln,
acm_resp,
doc_annual,
do_annual,
nitrates,
aer_resp,
anb_resp) %>%
mutate(log_resp = log10(acm_resp)) %>%
mutate(log_doc = log10(doc_annual)) %>%
mutate(log_do = log10(do_annual)) %>%
mutate(log_no3t = log10(nitrates)) %>%
mutate(log_ae_resp = log10(aer_resp)) %>%
mutate(log_an_resp = log10(anb_resp)) %>%
select(c(7:12)) %>%
ggpairs(lower = list(continuous =
wrap(my_fn,
pts=list(size=0.1, colour="gray"),
smt=list(method="loess", se=F, size=1, colour="blue",span=0.8))))
paired_plot_b
qlabel <- c("Q10","Q20","Q30","Q40","Q50","Q60","Q70","Q80+")
bgc_cln <- bgc_cln %>%
mutate(ent_cat = factor(Hmisc::cut2(hrt, g = 8),labels = qlabel)) %>%
mutate(rst_cat = factor(Hmisc::cut2(res_time, g = 8),labels = qlabel)) %>%
mutate(hze_cat = factor(Hmisc::cut2(hz_exchng, g = 8),labels = qlabel)) %>%
mutate(d50_cat = factor(Hmisc::cut2(log10(d50m), g = 8),labels = qlabel))
bgc_clnt <- bgc_cln0 %>%
select(wshd_area,
acm_resp,
hrt,
p_frt_t,
p_shb_t) %>%
mutate(ent_cat = factor(Hmisc::cut2(hrt, g = 8),labels = qlabel))
my_dcolors <- c("#a6c8ff","#78a9ff","#4589ff","#0f62fe",
"#00539a","#003a6d","#012749","#061727")
my_rcolors <- c("#fff1f1","#ffd7d9","#ffb3b8","#fa4d56",
"#da1e28","#a2191f","#750e13","#2d0709")
my_mcolors <- c("#ffd6e8","#ffafd2","#ff7eb6","#ee5396",
"#d62670","#9f1853","#740937","#510224")
breaks <- 10^(-10:10)
breaks_c <- 10^seq(-10,10,by=4)
minor_breaks <- rep(1:9, 21)*(10^rep(-10:10, each=9))
ent_quant_i <- ggplot(bgc_cln,aes(wshd_area,
acm_resp,
color=ent_cat))+
geom_smooth(method="lm",fullrange = TRUE, alpha = 0.3)+
scale_x_log10(breaks = breaks,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
limits = c(10^-6,10^6),
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*m^-2*d^-1,")"))))+
annotation_logticks(size = 0.75, sides = "tblr")+
scale_color_manual(values = my_mcolors)+
geom_abline(slope=1.0, color = "red", linetype = "dashed", size = 1.5)+
guides(color=guide_legend(title = "Landscape Entropy\n(quartiles)"))+
theme_httn+
theme(legend.position ="none",
axis.title = element_blank(),
axis.text = element_blank(),
plot.title = element_text(size = 16))+
guides(alpha = "none")
ent_quant_i
# Main plot
ent_quant <- ggplot(bgc_cln,aes(wshd_area,
acm_resp,
color=ent_cat))+
geom_point(size = 2.5,aes(alpha = hrt))+
# geom_smooth(method="lm",fullrange = TRUE, se=FALSE)+
# facet_wrap(~ent_cat,nrow = 2)+
# geom_point(aes(alpha=p_frt_t), size = 2.5)+
# geom_point(aes(alpha=p_shb_t), size = 2.5)+
# geom_point(aes(alpha=p_ant_t), size = 2.5)+
# geom_smooth(method="lm",fullrange = TRUE, se=FALSE)+
scale_x_log10(breaks = breaks,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
limits = c(10^-6,10^6),
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*m^-2*d^-1,")"))))+
annotation_logticks(size = 0.75, sides = "tblr")+
annotation_custom(
grob = ent_ins,
xmin = 2,
xmax = 4,
ymin = -6,
ymax = -2) +
scale_color_manual(values = my_mcolors)+
geom_abline(slope=1.0, color = "red", linetype = "dashed", size = 1.5)+
guides(color=guide_legend(title = "Landscape Entropy\n(quartiles)"))+
theme_httn+
theme(legend.position =c(0.88,0.53),
# panel.grid.minor= element_blank(),
# panel.grid.major =element_blank(),
legend.text = element_text(size=16),
legend.title = element_text(size=18),
plot.title = element_text(size = 16),
strip.text = element_text(size = 18, face = "bold"))+
guides(alpha = "none")
ent_ins <- ggplotGrob(ent_quant_i)
# Main plot
ent_quant <- ggplot(bgc_cln,aes(wshd_area,
acm_resp,
color=ent_cat))+
geom_point(size = 2.5,aes(alpha = hrt))+
# geom_smooth(method="lm",fullrange = TRUE, se=FALSE)+
# facet_wrap(~ent_cat,nrow = 2)+
# geom_point(aes(alpha=p_frt_t), size = 2.5)+
# geom_point(aes(alpha=p_shb_t), size = 2.5)+
# geom_point(aes(alpha=p_ant_t), size = 2.5)+
# geom_smooth(method="lm",fullrange = TRUE, se=FALSE)+
scale_x_log10(breaks = breaks,
labels = trans_format("log10", math_format(10^.x)))+
scale_y_log10(breaks = breaks_c,
limits = c(10^-6,10^6),
labels = trans_format("log10", math_format(10^.x)))+
xlab(expression(bold(paste("Watershed area"," ","(",km^2,")"))))+
ylab(expression(bold(paste("Cumulative total respiration"," ","(",gCO[2]*m^-2*d^-1,")"))))+
annotation_logticks(size = 0.75, sides = "tblr")+
annotation_custom(
grob = ent_ins,
xmin = 2,
xmax = 4,
ymin = -6,
ymax = -2) +
scale_color_manual(values = my_mcolors)+
geom_abline(slope=1.0, color = "red", linetype = "dashed", size = 1.5)+
guides(color=guide_legend(title = "Landscape Entropy\n(quartiles)"))+
theme_httn+
theme(legend.position =c(0.88,0.53),
# panel.grid.minor= element_blank(),
# panel.grid.major =element_blank(),
legend.text = element_text(size=16),
legend.title = element_text(size=18),
plot.title = element_text(size = 16),
strip.text = element_text(size = 18, face = "bold"))+
guides(alpha = "none")
ent_quant
p <- ggplot(na.omit(bgc_cln),aes(p_frt_t, hrt, color = log(doc_annual)))+
geom_point()
p
librarian::shelf(ggplot2,dplyr,plot3D,plot3Drgl,readr,rgl,tidyverse,entropy,GGally,
stringr)
set.seed(2703)
rsp_o <- read.csv("data/230116_yrb_respt_vars.csv",
stringsAsFactors=TRUE)
hbc_o <- read.csv("data/230117_yrb_hbgc_vars.csv",
stringsAsFactors = TRUE)
lnd_o <- read.csv("data/230117_yrb_cmid_land_2011.csv",
stringsAsFactors=TRUE)
glimpse(rsp_o)
colnames(rsp_o)
rsp_o <- rename(rsp_o,
comid = COMID,
lngt_drg = CAT_STREAM_LENGTH,
slop_drg = CAT_STREAM_SLOPE,
lngt_wsd = TOT_STREAM_LENGTH,
slop_wsd = TOT_STREAM_SLOPE,
area_drg = CAT_BASIN_AREA,
area_wsd = TOT_BASIN_AREA,
area_stm = pred_stream_area_m2_fill,
clgt_stm = cum_stream_length_m,
csar_stm = cum_stream_area_m2,
crsp_mss = cum_totco2g_day,
crsp_sta = cum_totco2g_day_Tsurface_m2,
crsp_wsa = cum_totco2g_day_Tdrain_m2
)
glimpse(rsp_o)
rsp_o$wdth_stm <- 10^(rsp_o$pred_logw_m)
glimpse(rsp_o)
rsp_o <- rename(rsp_o,
comid = COMID,
lngt_drg = CAT_STREAM_LENGTH,
slop_drg = CAT_STREAM_SLOPE,
lngt_wsd = TOT_STREAM_LENGTH,
slop_wsd = TOT_STREAM_SLOPE,
area_drg = CAT_BASIN_AREA,
area_wsd = TOT_BASIN_AREA,
lngt_stm = stream_length_m,
area_stm = pred_stream_area_m2_fill,
clgt_stm = cum_stream_length_m,
csar_stm = cum_stream_area_m2,
crsp_mss = cum_totco2g_day,
crsp_sta = cum_totco2g_day_Tsurface_m2,
crsp_wsa = cum_totco2g_day_Tdrain_m2
)
#values
rsp_o <- read.csv("data/230116_yrb_respt_vars.csv",
stringsAsFactors=TRUE)
rsp_o <- rename(rsp_o,
comid = COMID,
lngt_drg = CAT_STREAM_LENGTH,
slop_drg = CAT_STREAM_SLOPE,
lngt_wsd = TOT_STREAM_LENGTH,
slop_wsd = TOT_STREAM_SLOPE,
area_drg = CAT_BASIN_AREA,
area_wsd = TOT_BASIN_AREA,
lngt_stm = stream_length_m,
area_stm = pred_stream_area_m2_fill,
clgt_stm = cum_stream_length_m,
csar_stm = cum_stream_area_m2,
crsp_mss = cum_totco2g_day,
crsp_sta = cum_totco2g_day_Tsurface_m2,
crsp_wsa = cum_totco2g_day_Tdrain_m2
)
rsp_o$wdth_stm <- 10^(rsp_o$pred_logw_m) # adding a column with stream width in
# m instead of the logarithm
p <- ggplot(rsp_o,aes(lngt_stm*wdth_stm,area_stm))+
geom_point()+
geom_abline()
p
p <- ggplot(rsp_o,aes(lngt_stm*wdth_stm,area_stm))+
geom_point()+
geom_abline()+
scale_x_log10()+
scale_y_log10()
p
